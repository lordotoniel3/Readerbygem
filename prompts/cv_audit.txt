'''\
Eres un experto en validación de datos extraídos de hojas de vida. Evalúa cada campo del JSON proporcionado asignando un puntaje individual de 0 a 1 según estas reglas y Necesito que me proporciones un score, no necesito un codigo en python, ciñete a los resultados reales que encuentres:

### Reglas de Validación:
1. **Campos Obligatorios** (deben estar presentes y ser válidos):
   - `full_name`: 1 si está presente y capitalizado correctamente (ej: "Juan Pérez"). 0 si falta. 0.5 si tiene formato incorrecto.
   - `email` **o** `tel`: Al menos uno debe ser válido. 
     - `email`: 1 si tiene formato válido (ej: usuario@dominio.com), 0 en otro caso.
     - `tel`: 1 si tiene formato coherente, tengo o no identificador de país(ej: +57 1234567890, o 3015601234 son ambos válidos), 0 en otro caso.
   - `description`: 1 si no está vacío. 0 si está vacío o ausente.
   - `education`: Puntaje = (N° entradas válidas) / (Total entradas). Una entrada es válida si:
     - `title` y `place` no están vacíos.
     - fechas en formato MM/AAAA.
     - `type` es uno de: técnico|pregrado|posgrado|secundaria|otro.
  Para cada campo obligatorio, si está presente y correctamente extraído, asigna 1; si está ausente o es incorrecto, asigna 0; y si tiene errores leves o parciales, asigna un valor intermedio (por ejemplo, 0.5).

2. **Campos Opcionales** (puntúan 1 si están ausentes o son válidos):
   - `fullAddress`: 1 si incluye ciudad, estado y país (ej: "Calle 123, Bogotá, Colombia").
   - `experiences`: Puntaje = (N° entradas válidas) / (Total entradas). Una entrada es válida si:
     - `jobPosition`, `company` y `description` no están vacíos.
     - fechas en formato MM/AAAA.
   - `abilities`: Puntaje = (N° habilidades válidas) / (Total habilidades). Una habilidad es válida si contiene habilidades técnicas o blandas (por ejemplo, "Python", "Liderazgo") y no confundirse con otras entradas (como idiomas, por ejemplo).
   - `languages`: Puntaje = (N° idiomas válidos) / (Total idiomas). Un idioma es válido si tiene `name` (ej: "Inglés") y `level` (A1-C2 o "Nativo").

### Instrucciones Adicionales:
- Para listas vacías en campos opcionales (ej: `habilidades: []`), asigna 1.
- Sé estricto con formatos de fechas y valores predefinidos.
- Asegúrate de que cada dato corresponda estrictamente a la categoría definida. Por ejemplo, si en "habilidad" se incluye un idioma o una fecha, penaliza ese campo.
- Si existe un error de clasificación (por ejemplo, "inglés, nativo" en "habilidad" en lugar de en "idioma"), ajusta la puntuación correspondiente.
- Todos los scores deben ser numéricos de punto flotante y no strings u otro fomrato (un score de "0.8" es incorrecto, debería ser un score de 0.8)

### Salida Requerida:
Devuelve únicamente un JSON con la siguiente estructura:
{{
  "scores": {{
    "full_name": <valor entre 0 y 1>,
    "email": <valor entre 0 y 1>,
    "tel": <valor entre 0 y 1>,
    "description": <valor entre 0 y 1>,
    "fullAddress": <valor entre 0 y 1>,
    "education": <valor entre 0 y 1>,
    "experiences": <valor entre 0 y 1>,
    "abilities": <valor entre 0 y 1>,
    "languages": <valor entre 0 y 1>
  }},
  "explicacion": "Detalle de los errores o inconsistencias encontrados en cada campo (dejar vacío si todo es correcto)."
}}

Donde las claves significan lo siguente:
- `scores`: Puntajes individuales para cada campo básado en las métricas expuestas previamente.
- `explicacion`: Breve informe de los errores encontrados. Si no hay errores (es decir todos los campos obligatorios son presentes y válidos, mientras que los campos no obligatorios son válidos) no pongas nada en esta sección.

Información a validar:
{df_data}
'''