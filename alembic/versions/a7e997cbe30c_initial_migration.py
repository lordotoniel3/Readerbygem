"""Initial migration

Revision ID: a7e997cbe30c
Revises: 
Create Date: 2025-07-01 15:47:49.398606

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'a7e997cbe30c'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('logs',
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('format', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('parent_file', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('identified_format', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('invalid_format', sa.Boolean(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.PrimaryKeyConstraint('id_contenido')
    )
    op.create_table('cc',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('tipo_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_cedula', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombres', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('apellidos', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_nacimiento', sa.DateTime(), nullable=True),
    sa.Column('lugar_nacimiento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_expedicion', sa.DateTime(), nullable=True),
    sa.Column('lugar_expedicion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('estatura', sa.Float(), nullable=True),
    sa.Column('grupo_sanguineo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sexo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_cc_id_contenido'), 'cc', ['id_contenido'], unique=False)
    op.create_table('existencia',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('fecha_expedicion', sa.DateTime(), nullable=True),
    sa.Column('numero_recibo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('codigo_verificacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('razon_social', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sigla', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('organizacion_juridica', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('categoria', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('matricula_mercantil', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_matricula', sa.DateTime(), nullable=True),
    sa.Column('domicilio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion_principal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_comercial', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_comercial', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sitio_web', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_constitucion', sa.DateTime(), nullable=True),
    sa.Column('escritura_constitucion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notaria_constitucion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_vigencia', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('objeto_social', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('codigo_ciiu', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descripcion_ciiu', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('sector_economico', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('activo_total', sa.Float(), nullable=True),
    sa.Column('tamano_empresa', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ingresos_actividad_ordinaria', sa.Float(), nullable=True),
    sa.Column('tipo_capital', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('valor_capital', sa.Float(), nullable=True),
    sa.Column('facultades_representante', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('limitaciones_representante', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('revisor_fiscal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('estado_matricula', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_existencia_id_contenido'), 'existencia', ['id_contenido'], unique=False)
    op.create_table('extracto_bancario',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('nombre_banco', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion_banco', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_banco', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombre_titular', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_cliente', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion_titular', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_cuenta', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_cuenta', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('moneda', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_inicial_periodo', sa.DateTime(), nullable=True),
    sa.Column('fecha_final_periodo', sa.DateTime(), nullable=True),
    sa.Column('saldo_anterior', sa.Float(), nullable=True),
    sa.Column('saldo_actual', sa.Float(), nullable=True),
    sa.Column('total_depositos', sa.Float(), nullable=True),
    sa.Column('total_retiros', sa.Float(), nullable=True),
    sa.Column('total_comisiones', sa.Float(), nullable=True),
    sa.Column('tasa_interes', sa.Float(), nullable=True),
    sa.Column('intereses_generados', sa.Float(), nullable=True),
    sa.Column('retenciones', sa.Float(), nullable=True),
    sa.Column('fecha_corte_siguiente', sa.DateTime(), nullable=True),
    sa.Column('fecha_emision_extracto', sa.DateTime(), nullable=True),
    sa.Column('numero_Extracto', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_extracto_bancario_id_contenido'), 'extracto_bancario', ['id_contenido'], unique=False)
    op.create_table('facturas_invoice',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('nit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('supplier_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_amount', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_tax_amount', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('net_amount', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_facturas_invoice_id_contenido'), 'facturas_invoice', ['id_contenido'], unique=False)
    op.create_table('hoja_de_vida',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('nombre_completo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descripcion_perfil', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion_completa', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_hoja_de_vida_id_contenido'), 'hoja_de_vida', ['id_contenido'], unique=False)
    op.create_table('orden_compra',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('numero_orden', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_emision', sa.DateTime(), nullable=True),
    sa.Column('moneda', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombre_comprador', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('identificacion_comprador', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion_comprador', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_comprador', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_comprador', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombre_proveedor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('identificacion_proveedor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion_proveedor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_proveedor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_proveedor', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('subtotal', sa.Float(), nullable=True),
    sa.Column('impuestos', sa.Float(), nullable=True),
    sa.Column('descuentos', sa.Float(), nullable=True),
    sa.Column('total', sa.Float(), nullable=True),
    sa.Column('forma_pago', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('plazo_entrega', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('lugar_entrega', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('observaciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_orden_compra_id_contenido'), 'orden_compra', ['id_contenido'], unique=False)
    op.create_table('rub',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('numero_formulario', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_reporte', sa.DateTime(), nullable=True),
    sa.Column('tipo_reporte', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('razon_social', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dv', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_entidad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('municipio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('departamento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombre_representante_legal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('apellido_representante_legal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_documento_representante_legal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_documento_representante_legal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_representante_legal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email_representante_legal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('declarante', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cargo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_declaracion', sa.DateTime(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rub_id_contenido'), 'rub', ['id_contenido'], unique=False)
    op.create_table('rut',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('numero_formulario', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_expedicion', sa.DateTime(), nullable=True),
    sa.Column('fecha_ultima_actualizacion', sa.DateTime(), nullable=True),
    sa.Column('tipo_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dv', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('razon_social', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primer_apellido', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('primer_nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_nacimiento', sa.DateTime(), nullable=True),
    sa.Column('pais_nacimiento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('departmento_nacimiento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ciudad_nacimiento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pais', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('departamento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ciudad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_fijo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_movil', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('notificacion_electronica', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('regimen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_inicio_actividades', sa.DateTime(), nullable=True),
    sa.Column('estado_rut', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_rut_id_contenido'), 'rut', ['id_contenido'], unique=False)
    op.create_table('educacion',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Uuid(), nullable=False),
    sa.Column('titulo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('institucion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_inicio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_fin', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['hoja_de_vida.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('existencia_establecimientos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('existence_id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('matricula', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_matricula', sa.DateTime(), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ciudad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_1', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono_2', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('actividad_principal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descripcion_habilidad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('valor_establecimiento', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['existence_id'], ['existencia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('existencia_representantes_legales',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('existence_id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cargo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_identificacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_identificacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('es_suplente', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_nombramiento', sa.DateTime(), nullable=True),
    sa.Column('documento_nombramiento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['existence_id'], ['existencia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('existencia_socios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('existence_id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_identificacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_identificacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_cuotas_acciones', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('valor_participacion', sa.Float(), nullable=True),
    sa.Column('porcentaje_participacion', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['existence_id'], ['existencia.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('experiencia',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Uuid(), nullable=False),
    sa.Column('puesto', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('empresa', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['hoja_de_vida.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('extracto_bancario_movimientos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('extract_id', sa.Uuid(), nullable=False),
    sa.Column('fecha', sa.DateTime(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('referencia', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('valor', sa.Float(), nullable=True),
    sa.Column('tipo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('saldo_posterior', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['extract_id'], ['extracto_bancario.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('facturas_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('bill_id', sa.Uuid(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('product_id', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('quantity', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('unit_price', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['bill_id'], ['facturas_invoice.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habilidad',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Uuid(), nullable=False),
    sa.Column('nombre_habilidad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['hoja_de_vida.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('idioma',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('cv_id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nivel', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('examen', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['cv_id'], ['hoja_de_vida.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orden_compra_items',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('buy_id', sa.Uuid(), nullable=False),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('cantidad', sa.Float(), nullable=False),
    sa.Column('unidad_medida', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('precio_unitario', sa.Float(), nullable=False),
    sa.Column('subtotal', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['buy_id'], ['orden_compra.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rub_beneficiarios',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rub_id', sa.Uuid(), nullable=False),
    sa.Column('tipo_persona', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('apellido', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('razon_social', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('dv', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pais_nacimiento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_nacimiento', sa.DateTime(), nullable=True),
    sa.Column('pais_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nacionalidad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('pais_residencia', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('municipio', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('departamento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('telefono', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('tipo_beneficiario', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('criterio_determinacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('porcentaje_participacion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rub_id'], ['rub.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rut_actividades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rut_id', sa.Uuid(), nullable=False),
    sa.Column('codigo_ciiu', sa.Integer(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('actividad_principal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rut_id'], ['rut.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rut_establecimientos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rut_id', sa.Uuid(), nullable=False),
    sa.Column('nombre', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('direccion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('ciudad', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('departamento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('actividad_principal', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_apertura', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rut_id'], ['rut.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rut_representante',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rut_id', sa.Uuid(), nullable=False),
    sa.Column('tipo_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('numero_documento', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('nombre_completo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('cargo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.ForeignKeyConstraint(['rut_id'], ['rut.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rut_responsabilidades',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rut_id', sa.Uuid(), nullable=False),
    sa.Column('codigo', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('descripcion', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fecha_inicio', sa.DateTime(), nullable=True),
    sa.Column('fecha_fin', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['rut_id'], ['rut.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('rut_responsabilidades')
    op.drop_table('rut_representante')
    op.drop_table('rut_establecimientos')
    op.drop_table('rut_actividades')
    op.drop_table('rub_beneficiarios')
    op.drop_table('orden_compra_items')
    op.drop_table('idioma')
    op.drop_table('habilidad')
    op.drop_table('facturas_product')
    op.drop_table('extracto_bancario_movimientos')
    op.drop_table('experiencia')
    op.drop_table('existencia_socios')
    op.drop_table('existencia_representantes_legales')
    op.drop_table('existencia_establecimientos')
    op.drop_table('educacion')
    op.drop_index(op.f('ix_rut_id_contenido'), table_name='rut')
    op.drop_table('rut')
    op.drop_index(op.f('ix_rub_id_contenido'), table_name='rub')
    op.drop_table('rub')
    op.drop_index(op.f('ix_orden_compra_id_contenido'), table_name='orden_compra')
    op.drop_table('orden_compra')
    op.drop_index(op.f('ix_hoja_de_vida_id_contenido'), table_name='hoja_de_vida')
    op.drop_table('hoja_de_vida')
    op.drop_index(op.f('ix_facturas_invoice_id_contenido'), table_name='facturas_invoice')
    op.drop_table('facturas_invoice')
    op.drop_index(op.f('ix_extracto_bancario_id_contenido'), table_name='extracto_bancario')
    op.drop_table('extracto_bancario')
    op.drop_index(op.f('ix_existencia_id_contenido'), table_name='existencia')
    op.drop_table('existencia')
    op.drop_index(op.f('ix_cc_id_contenido'), table_name='cc')
    op.drop_table('cc')
    op.drop_table('logs')
    # ### end Alembic commands ###
