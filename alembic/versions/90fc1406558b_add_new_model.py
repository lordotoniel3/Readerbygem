"""Add new model

Revision ID: 90fc1406558b
Revises: 5bc1ecda5eb4
Create Date: 2025-07-21 16:40:26.200948

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = '90fc1406558b'
down_revision: Union[str, Sequence[str], None] = '5bc1ecda5eb4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('saldo',
    sa.Column('id', sa.Uuid(), nullable=False),
    sa.Column('id_contenido', sa.Uuid(), nullable=False),
    sa.Column('id_archivo', sa.BigInteger(), nullable=False),
    sa.Column('bank_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bank_nit', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('account_holder', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('currency', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('balance_date', sa.DateTime(), nullable=True),
    sa.Column('total_orders', sa.Float(), nullable=True),
    sa.Column('total_orders_exchange', sa.Float(), nullable=True),
    sa.Column('total_orders_available', sa.Float(), nullable=True),
    sa.Column('total_accounts', sa.Float(), nullable=True),
    sa.Column('total_accounts_exchange', sa.Float(), nullable=True),
    sa.Column('total_accounts_available', sa.Float(), nullable=True),
    sa.Column('score', sa.Float(), nullable=False),
    sa.Column('explicacion_score', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('filename', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('is_duplicate', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['id_contenido'], ['logs.id_contenido'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_saldo_id_contenido'), 'saldo', ['id_contenido'], unique=False)
    op.create_table('cuenta',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance_id', sa.Uuid(), nullable=False),
    sa.Column('account_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('bank_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_balance', sa.Float(), nullable=True),
    sa.Column('saldo_disponible', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['balance_id'], ['saldo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orden',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('balance_id', sa.Uuid(), nullable=False),
    sa.Column('proyect_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('order_number', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('fund_name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('alias', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('total_balance', sa.Float(), nullable=True),
    sa.Column('exchange_balance', sa.Float(), nullable=True),
    sa.Column('available_balance', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['balance_id'], ['saldo.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('orden')
    op.drop_table('cuenta')
    op.drop_index(op.f('ix_saldo_id_contenido'), table_name='saldo')
    op.drop_table('saldo')
    # ### end Alembic commands ###
